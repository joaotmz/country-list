{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joao/Downloads/Projects/web-countries/src/views/Home/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CardItem from '../../components/card-item';\nimport Header from '../../components/header';\nimport { MainWrapper } from '../../theme/style-common';\nimport { BoxList } from './style';\nexport default function Home() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [filteredList, setFilteredList] = useState([]);\n\n  const prepareItemCard = item => {\n    return item.map(element => {\n      return {\n        image: element.flag.svgFile,\n        title: element.name,\n        subtitle: element.capital,\n        context: element\n      };\n    });\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      await fetch('https://countries-274616.ew.r.appspot.com', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: `\n                    query {\n                        Country {\n                          name\n                          nativeName\n                          alpha2Code\n                          alpha3Code\n                          area\n                          population\n                          populationDensity\n                          capital\n                          demonym\n                          gini\n                          officialLanguages {\n                            iso639_1\n                            iso639_2\n                            name\n                            nativeName\n                          }\n                          currencies {\n                            name\n                            symbol\n                          }\n                          flag {\n                            emoji\n                            emojiUnicode\n                            svgFile\n                          }\n                        }\n                      }\n                `\n        })\n      }).then(res => res.json()).then(res => {\n        let fList = prepareItemCard(res.data.Country);\n        setCountries(fList);\n        setFilteredList(fList);\n      }).catch(err => console.log(err));\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [filteredList && filteredList.length > 0 && /*#__PURE__*/_jsxDEV(Header, {\n      title: \"Mundo\",\n      countries: countries,\n      filtered: setFilteredList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(MainWrapper, {\n      children: /*#__PURE__*/_jsxDEV(BoxList, {\n        children: filteredList.map((item, index) => /*#__PURE__*/_jsxDEV(CardItem, {\n          item: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"21qn/oFMVpQernq+fWTw0eHkhkw=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/joao/Downloads/Projects/web-countries/src/views/Home/index.js"],"names":["React","useState","useEffect","CardItem","Header","MainWrapper","BoxList","Home","countries","setCountries","filteredList","setFilteredList","prepareItemCard","item","map","element","image","flag","svgFile","title","name","subtitle","capital","context","fetchData","fetch","method","headers","body","JSON","stringify","query","then","res","json","fList","data","Country","catch","err","console","log","length","index"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,OAAT,QAAwB,SAAxB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMW,eAAe,GAAIC,IAAD,IAAU;AAC9B,WAAOA,IAAI,CAACC,GAAL,CAASC,OAAO,IAAI;AAAE,aAAO;AAAEC,QAAAA,KAAK,EAAED,OAAO,CAACE,IAAR,CAAaC,OAAtB;AAA+BC,QAAAA,KAAK,EAAEJ,OAAO,CAACK,IAA9C;AAAoDC,QAAAA,QAAQ,EAAEN,OAAO,CAACO,OAAtE;AAA+EC,QAAAA,OAAO,EAAER;AAAxF,OAAP;AAAyG,KAA/H,CAAP;AACH,GAFD;;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAesB,SAAf,GAA2B;AACvB,YAAMC,KAAK,CAAC,2CAAD,EAA8C;AACrDC,QAAAA,MAAM,EAAE,MAD6C;AAErDC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAF4C;AAGrDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,KAAK,EAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BqC,SAAf;AAH+C,OAA9C,CAAL,CAoCDC,IApCC,CAoCIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EApCX,EAqCDF,IArCC,CAqCIC,GAAG,IAAI;AACT,YAAIE,KAAK,GAAGvB,eAAe,CAACqB,GAAG,CAACG,IAAJ,CAASC,OAAV,CAA3B;AACA5B,QAAAA,YAAY,CAAC0B,KAAD,CAAZ;AACAxB,QAAAA,eAAe,CAACwB,KAAD,CAAf;AACH,OAzCC,EA0CDG,KA1CC,CA0CKC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CA1CZ,CAAN;AA2CH;;AACDf,IAAAA,SAAS;AACZ,GA/CQ,EA+CN,EA/CM,CAAT;AAkDA,sBACI;AAAA,eAEQd,YAAY,IAAIA,YAAY,CAACgC,MAAb,GAAsB,CAAtC,iBACI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,SAAS,EAAElC,SAAjC;AAA4C,MAAA,QAAQ,EAAEG;AAAtD;AAAA;AAAA;AAAA;AAAA,YAHZ,eAKI,QAAC,WAAD;AAAA,6BACI,QAAC,OAAD;AAAA,kBAEQD,YAAY,CAACI,GAAb,CAAiB,CAACD,IAAD,EAAO8B,KAAP,kBACb,QAAC,QAAD;AAAsB,UAAA,IAAI,EAAE9B;AAA5B,WAAe8B,KAAf;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AAkBH;;GA7EuBpC,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CardItem from '../../components/card-item';\nimport Header from '../../components/header';\nimport { MainWrapper } from '../../theme/style-common';\nimport { BoxList } from './style';\n\nexport default function Home() {\n\n    const [countries, setCountries] = useState([]);\n    const [filteredList, setFilteredList] = useState([]);\n\n    const prepareItemCard = (item) => {\n        return item.map(element => { return { image: element.flag.svgFile, title: element.name, subtitle: element.capital, context: element }});\n    }\n\n    useEffect(() => {\n        async function fetchData() {\n            await fetch('https://countries-274616.ew.r.appspot.com', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    query: `\n                    query {\n                        Country {\n                          name\n                          nativeName\n                          alpha2Code\n                          alpha3Code\n                          area\n                          population\n                          populationDensity\n                          capital\n                          demonym\n                          gini\n                          officialLanguages {\n                            iso639_1\n                            iso639_2\n                            name\n                            nativeName\n                          }\n                          currencies {\n                            name\n                            symbol\n                          }\n                          flag {\n                            emoji\n                            emojiUnicode\n                            svgFile\n                          }\n                        }\n                      }\n                ` })\n            })\n                .then(res => res.json())\n                .then(res => {\n                    let fList = prepareItemCard(res.data.Country)\n                    setCountries(fList)\n                    setFilteredList(fList)\n                })\n                .catch(err => console.log(err))\n        }\n        fetchData();\n    }, []);\n\n\n    return (\n        <>\n            {\n                filteredList && filteredList.length > 0 &&\n                    <Header title=\"Mundo\" countries={countries} filtered={setFilteredList}></Header>\n                }\n            <MainWrapper>\n                <BoxList>\n                    {\n                        filteredList.map((item, index) => (\n                            <CardItem key={index} item={item}></CardItem>\n                        ))\n                    }\n                </BoxList>\n\n            </MainWrapper>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}