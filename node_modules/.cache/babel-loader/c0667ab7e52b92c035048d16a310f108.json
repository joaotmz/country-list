{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joao/Downloads/Projects/web-countries/src/components/search/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Box, Input } from './styles';\nimport { debounce } from \"lodash\";\nexport default function Search({\n  countries,\n  filtered\n}) {\n  _s();\n\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const onChangeValue = e => {\n    setSearchValue(e.target.value);\n  };\n\n  useEffect(() => {\n    if (searchValue) {\n      let result = filterItem(searchValue);\n\n      if (result && result.length > 0) {\n        filtered(result);\n      } else {\n        filtered(countries);\n      }\n    }\n  }, [searchValue]);\n\n  const filterItem = val => {\n    if (val.length > 0) {\n      return countries.filter(option => option.title.toLowerCase().includes(val.toLowerCase()));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        name: \"search\",\n        placeholder: \"Pesquisar...\",\n        onChange: onChangeValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Search, \"S8hhH0BCktIgiINoXZWNOX/hdJk=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/joao/Downloads/Projects/web-countries/src/components/search/index.js"],"names":["React","useCallback","useEffect","useState","Box","Input","debounce","Search","countries","filtered","searchValue","setSearchValue","searchResults","setSearchResults","onChangeValue","e","target","value","result","filterItem","length","val","filter","option","title","toLowerCase","includes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,UAA3B;AACA,SAASC,QAAT,QAAyB,QAAzB;AAEA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAhB,EAAyC;AAAA;;AAEpD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;;AAGA,QAAMW,aAAa,GAAIC,CAAD,IAAO;AACzBJ,IAAAA,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH,GAFD;;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGQ,WAAH,EAAe;AACX,UAAIQ,MAAM,GAAGC,UAAU,CAACT,WAAD,CAAvB;;AACA,UAAGQ,MAAM,IAAIA,MAAM,CAACE,MAAP,GAAgB,CAA7B,EAA+B;AAC3BX,QAAAA,QAAQ,CAACS,MAAD,CAAR;AACH,OAFD,MAEK;AACDT,QAAAA,QAAQ,CAACD,SAAD,CAAR;AACH;AACJ;AACJ,GATQ,EASN,CAACE,WAAD,CATM,CAAT;;AAYA,QAAMS,UAAU,GAAIE,GAAD,IAAS;AACxB,QAAIA,GAAG,CAACD,MAAJ,GAAa,CAAjB,EAAoB;AAClB,aAAOZ,SAAS,CAACc,MAAV,CAAiBC,MAAM,IAAIA,MAAM,CAACC,KAAP,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCL,GAAG,CAACI,WAAJ,EAApC,CAA3B,CAAP;AACD;AACF,GAJH;;AAMA,sBACI;AAAA,2BACI,QAAC,GAAD;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAiC,QAAA,WAAW,EAAC,cAA7C;AAA4D,QAAA,QAAQ,EAAEX;AAAtE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAOH;;GAnCuBP,M;;KAAAA,M","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { Box, Input } from './styles';\nimport { debounce } from \"lodash\";\n\nexport default function Search({ countries, filtered }) {\n\n    const [searchValue, setSearchValue] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([]);\n\n\n    const onChangeValue = (e) => {\n        setSearchValue(e.target.value)\n    };\n\n    useEffect(() => {\n        if(searchValue){\n            let result = filterItem(searchValue)\n            if(result && result.length > 0){\n                filtered(result)\n            }else{\n                filtered(countries) \n            }\n        }\n    }, [searchValue])\n\n\n    const filterItem = (val) => {\n        if (val.length > 0) {\n          return countries.filter(option => option.title.toLowerCase().includes(val.toLowerCase()));\n        }\n      }\n\n    return (\n        <>\n            <Box>\n                <Input type=\"text\" name=\"search\" placeholder=\"Pesquisar...\" onChange={onChangeValue}></Input>\n            </Box>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}