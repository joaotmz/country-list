{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joao/Downloads/Projects/web-countries/src/views/CountryDetails/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CardInfo from '../../components/country-info/index';\nimport { BodyPage } from './style';\nexport default function CountryDetails() {\n  _s();\n\n  const prepareItemCard = item => {\n    return item.map(element => {\n      return {\n        image: element.flag.svgFile,\n        title: element.name,\n        subtitle: element.capital,\n        context: element\n      };\n    });\n  };\n\n  const [countryDetails, setCountryDetails] = useState([]);\n  let {\n    id\n  } = useParams();\n  useEffect(() => {\n    async function fetchData() {\n      await fetch('https://countries-274616.ew.r.appspot.com', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: `\n                    query {\n                        Country(alpha3Code: \"${id}\") {\n                            name\n                            area\n                            population\n                            capital\n                          flag {\n                            svgFile\n                          }\n                          topLevelDomains {\n                            name\n                          }\n                        }\n                      }\n                `\n        })\n      }).then(res => res.json()).then(res => {\n        debugger;\n        let fList = prepareItemCard(res.data.Country);\n        setCountryDetails(fList);\n      }).catch(err => console.log(err));\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BodyPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(CountryDetails, \"Rn34F5VGI2pU+2c4VoYnw8rYcf0=\", false, function () {\n  return [useParams];\n});\n\n_c = CountryDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryDetails\");","map":{"version":3,"sources":["/Users/joao/Downloads/Projects/web-countries/src/views/CountryDetails/index.js"],"names":["React","useState","useEffect","useParams","CardInfo","BodyPage","CountryDetails","prepareItemCard","item","map","element","image","flag","svgFile","title","name","subtitle","capital","context","countryDetails","setCountryDetails","id","fetchData","fetch","method","headers","body","JSON","stringify","query","then","res","json","fList","data","Country","catch","err","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAGA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACrC,QAAMC,eAAe,GAAIC,IAAD,IAAU;AAC9B,WAAOA,IAAI,CAACC,GAAL,CAASC,OAAO,IAAI;AAAE,aAAO;AAAEC,QAAAA,KAAK,EAAED,OAAO,CAACE,IAAR,CAAaC,OAAtB;AAA+BC,QAAAA,KAAK,EAAEJ,OAAO,CAACK,IAA9C;AAAoDC,QAAAA,QAAQ,EAAEN,OAAO,CAACO,OAAtE;AAA+EC,QAAAA,OAAO,EAAER;AAAxF,OAAP;AAAyG,KAA/H,CAAP;AACH,GAFD;;AAIA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,CAAC,EAAD,CAApD;AAEA,MAAI;AAAEoB,IAAAA;AAAF,MAASlB,SAAS,EAAtB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeoB,SAAf,GAA2B;AACvB,YAAMC,KAAK,CAAC,2CAAD,EAA8C;AACrDC,QAAAA,MAAM,EAAE,MAD6C;AAErDC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAF4C;AAGrDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,KAAK,EAAG;AAC5B;AACA,+CAA+CR,EAAG;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBqC,SAAf;AAH+C,OAA9C,CAAL,CAqBDS,IArBC,CAqBIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EArBX,EAsBDF,IAtBC,CAsBIC,GAAG,IAAI;AACT;AACA,YAAIE,KAAK,GAAG1B,eAAe,CAACwB,GAAG,CAACG,IAAJ,CAASC,OAAV,CAA3B;AACAf,QAAAA,iBAAiB,CAACa,KAAD,CAAjB;AACH,OA1BC,EA2BDG,KA3BC,CA2BKC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CA3BZ,CAAN;AA4BH;;AACDf,IAAAA,SAAS;AACZ,GAhCQ,EAgCN,EAhCM,CAAT;AAiCF,sBACI;AAAA,2BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF,mBADJ;AAOD;;GAjDuBhB,c;UAOPH,S;;;KAPOG,c","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CardInfo from '../../components/country-info/index'\nimport { BodyPage } from './style'\n\n\nexport default function CountryDetails() {\n    const prepareItemCard = (item) => {\n        return item.map(element => { return { image: element.flag.svgFile, title: element.name, subtitle: element.capital, context: element }});\n    }\n\n    const [countryDetails, setCountryDetails] = useState([]);\n\n    let { id } = useParams();\n    \n    useEffect(() => {\n        async function fetchData() {\n            await fetch('https://countries-274616.ew.r.appspot.com', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    query: `\n                    query {\n                        Country(alpha3Code: \"${id}\") {\n                            name\n                            area\n                            population\n                            capital\n                          flag {\n                            svgFile\n                          }\n                          topLevelDomains {\n                            name\n                          }\n                        }\n                      }\n                ` })\n            })\n                .then(res => res.json())\n                .then(res => {\n                    debugger\n                    let fList = prepareItemCard(res.data.Country)\n                    setCountryDetails(fList)\n                })\n                .catch(err => console.log(err))\n        }\n        fetchData();\n    }, []);\n  return(\n      <>   \n        <BodyPage>\n            {/* <CardInfo></CardInfo> */}\n        </BodyPage>\n      </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}